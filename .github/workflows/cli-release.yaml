# This defines a workflow to build and release a new version of the aptos CLI.
# In order to trigger it go to the Actions Tab of the Repo, click "Release CLI" and then "Run Workflow".

name: "Release CLI"

on:
  push
  # workflow_dispatch:
  #   inputs:
  #     release_tag:
  #       type: string
  #       required: true
  #       description: "The release tag to create. E.g. `aptos-cli-v0.2.3`:"
  #     source_git_ref_override:
  #       type: string
  #       required: false
  #       description: "GIT_SHA_OVERRIDE: Use this to override the Git SHA1, branch name (e.g. devnet) or tag to build the binaries from. Defaults to the workflow Git REV, but can be different than that:"
  #     release_title:
  #       type: string
  #       required: false
  #       description: "Name of the release, e.g. \"Aptos CLI devnet release 2022-06-09\":"

jobs:
  build-linux-binary:
    name: "Build Linux binary"
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          ref: ${{ github.event.inputs.source_git_ref_override }}
      - name: Build CLI
        run: scripts/cli/build_cli_release.sh
      - name: Upload Binary
        uses: actions/upload-artifact@v3
        with:
          name: cli-builds
          path: aptos-cli-*.zip

  build-linux-binary-arm64:
    name: "Build Linux binary (arm64)"
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          ref: ${{ github.event.inputs.source_git_ref_override }}
      - uses: uraimo/run-on-arch-action@v2
        name: Build CLI
        with:
          arch: aarch64
          distro: ubuntu_latest
          githubToken: ${{ github.token }}
          setup: |
            mkdir -p "${PWD}/artifacts"
          dockerRunArgs: |
            --volume "${PWD}/artifacts:/artifacts"
          install: |
            apt-get update -y -q
            apt-get install -y -q git libpq-dev curl openssl libssl-dev pkg-config build-essential clang libclang-dev
            curl https://sh.rustup.rs -sSf | sh -s -- -y
          run: |
            source "$HOME/.cargo/env"
            echo test
            nproc
            free -g
            scripts/cli/build_cli_release.sh
            cp aptos-cli-*.zip /artifacts/
      - name: Upload Binary
        uses: actions/upload-artifact@v3
        with:
          name: cli-builds
          path: artifacts/aptos-cli-*.zip

  # build-os-x-binary:
  #   name: "Build OS X binary"
  #   runs-on: macos-latest
  #   steps:
  #     - uses: actions/checkout@v3
  #       with:
  #         ref: ${{ github.event.inputs.source_git_ref_override }}
  #     - name: Build CLI
  #       run: scripts/cli/build_cli_release.sh
  #     - name: Upload Binary
  #       uses: actions/upload-artifact@v3
  #       with:
  #         name: cli-builds
  #         path: aptos-cli-*.zip

  # build-windows-binary:
  #   name: "Build Windows binary"
  #   runs-on: windows-latest
  #   steps:
  #     - uses: actions/checkout@v3
  #       with:
  #         ref: ${{ github.event.inputs.source_git_ref_override }}
  #     - name: Build CLI
  #       run: scripts\cli\build_cli_release.ps1
  #     - name: Upload Binary
  #       uses: actions/upload-artifact@v3
  #       with:
  #         name: cli-builds
  #         path: aptos-cli-*.zip

  # release-binaries:
  #   name: "Release binaries"
  #   needs:
  #     - build-linux-binary
  #     - build-linux-binary-arm64
  #     - build-os-x-binary
  #     - build-windows-binary
  #   runs-on: ubuntu-latest
  #   permissions:
  #     contents: "write"
  #     pull-requests: "read"
  #   steps:
  #     - name: Download prebuilt binaries
  #       uses: actions/download-artifact@v3
  #       with:
  #         name: cli-builds
  #     - name: Create GitHub Release
  #       uses: "marvinpinto/action-automatic-releases@v1.2.1"
  #       with:
  #         repo_token: "${{ secrets.GITHUB_TOKEN }}"
  #         automatic_release_tag: "${{ github.event.inputs.release_tag }}"
  #         prerelease: false
  #         title: "${{ github.event.inputs.release_title }}"
  #         files: |
  #           aptos-cli-*.zip
